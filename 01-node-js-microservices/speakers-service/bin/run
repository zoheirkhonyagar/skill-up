#!/usr/bin/env node
const axios = require("axios");
const http = require("http");

const config = require("../config")[process.env.NODE_ENV || "development"];

const log = config.log();
const service = require("../server/service")(config);

const server = http.createServer(service);

// Important - a service should not have a fixed port but should randomly choose one
server.listen(0);

server.on("listening", () => {
  const registerService = () => {
    axios.put(
      `http://localhost:3000/register/${config.name}/${config.version}/${
        server.address().port
      }`
    );
  };

  const unregisterService = async () => {
    await axios.delete(
      `http://localhost:3000/register/${config.name}/${config.version}/${
        server.address().port
      }`
    );
  };

  registerService();

  const interval = setInterval(registerService, 20000);

  const cleanup = async () => {
    clearInterval(interval);

    await unregisterService();
  };

  const gracefullyShutDown = async (event) => {
    log.debug(`Gracefully shutdown in started for ${event} event`);

    await cleanup();

    log.debug("cleanup finished successfully");

    process.exit(0);
  };

  process.on("uncaughtException", gracefullyShutDown);

  process.on("SIGINT", gracefullyShutDown);

  process.on("SIGTERM", gracefullyShutDown);

  log.info(
    `Hi there! I'm listening on port ${server.address().port} in ${service.get(
      "env"
    )} mode.`
  );
});
